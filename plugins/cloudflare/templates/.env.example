# ==============================================================================
# Cloudflare Pages Environment Variables Template
# ==============================================================================
# Copy this file to .env for local development
# NEVER commit .env or .env.production to version control!
# ==============================================================================

# ==============================================================================
# CLOUDFLARE AUTHENTICATION
# ==============================================================================

# API Token for CI/CD deployments
# Generate at: https://dash.cloudflare.com/profile/api-tokens
# Required permissions: "Cloudflare Pages:Edit"
# CLOUDFLARE_API_TOKEN=your-api-token-here

# Account ID (found in Cloudflare Dashboard)
# CLOUDFLARE_ACCOUNT_ID=your-account-id-here

# ==============================================================================
# PROJECT CONFIGURATION
# ==============================================================================

# Cloudflare Pages project name
PAGES_PROJECT_NAME=my-pages-project

# Build output directory
BUILD_OUTPUT_DIR=dist

# Build command
BUILD_COMMAND="npm run build"

# ==============================================================================
# BUILD-TIME ENVIRONMENT VARIABLES (PUBLIC)
# ==============================================================================
# These are embedded in your build and visible in the browser
# Use framework-specific prefixes:
# - Vite: VITE_*
# - Next.js: NEXT_PUBLIC_*
# - Create React App: REACT_APP_*
# - Nuxt: NUXT_PUBLIC_*
# - SvelteKit: PUBLIC_*

# API endpoints
VITE_API_URL=https://api.example.com
VITE_API_VERSION=v1

# Analytics
VITE_GA_ID=UA-XXXXXXX-X
VITE_GTM_ID=GTM-XXXXXXX

# Feature flags
VITE_FEATURE_NEW_UI=true
VITE_FEATURE_BETA=false

# Public keys (safe to expose)
VITE_STRIPE_PUBLIC_KEY=pk_test_xxxxxxxxxxxxx
VITE_MAPBOX_TOKEN=pk.xxxxxxxxxxxxx

# ==============================================================================
# RUNTIME SECRETS (PRIVATE)
# ==============================================================================
# These should be set via: wrangler pages secret put VARIABLE_NAME
# They are only accessible in Pages Functions, never in client-side code
# DO NOT set these as build-time variables!

# Database
# Set via: echo "$DATABASE_URL" | wrangler pages secret put DATABASE_URL --project-name=my-project
# DATABASE_URL=postgresql://user:password@host:5432/dbname

# API Keys
# Set via: wrangler pages secret put API_KEY --project-name=my-project
# API_KEY=your-secret-api-key-here

# Authentication
# Set via: wrangler pages secret put AUTH_SECRET --project-name=my-project
# AUTH_SECRET=your-auth-secret-here
# JWT_SECRET=your-jwt-secret-here

# Payment Processing
# Set via: wrangler pages secret put STRIPE_SECRET_KEY --project-name=my-project
# STRIPE_SECRET_KEY=sk_live_xxxxxxxxxxxxx
# STRIPE_WEBHOOK_SECRET=whsec_xxxxxxxxxxxxx

# Email Services
# Set via: wrangler pages secret put SENDGRID_API_KEY --project-name=my-project
# SENDGRID_API_KEY=SG.xxxxxxxxxxxxx
# MAILGUN_API_KEY=key-xxxxxxxxxxxxx

# External Services
# Set via: wrangler pages secret put OPENAI_API_KEY --project-name=my-project
# OPENAI_API_KEY=sk-xxxxxxxxxxxxx
# ANTHROPIC_API_KEY=sk-ant-xxxxxxxxxxxxx

# ==============================================================================
# ENVIRONMENT-SPECIFIC CONFIGURATION
# ==============================================================================

# Development
# NODE_ENV=development
# VITE_API_URL=http://localhost:3000

# Staging
# NODE_ENV=staging
# VITE_API_URL=https://staging-api.example.com

# Production
# NODE_ENV=production
# VITE_API_URL=https://api.example.com

# ==============================================================================
# WRANGLER DEVELOPMENT SERVER
# ==============================================================================

# Port for local dev server (wrangler pages dev)
# PORT=8788

# ==============================================================================
# INSTRUCTIONS FOR SETTING SECRETS
# ==============================================================================

# 1. For local development:
#    - Copy this file to .env
#    - Fill in build-time variables (VITE_*, NEXT_PUBLIC_*, etc.)
#    - Add .env to .gitignore

# 2. For runtime secrets in Cloudflare Pages:
#    - DO NOT put them in .env
#    - Set via Wrangler CLI:
#      wrangler pages secret put SECRET_NAME --project-name=my-project
#    - Or set via Cloudflare Dashboard:
#      Dashboard → Pages → Your Project → Settings → Environment variables

# 3. For CI/CD (GitHub Actions, GitLab CI, etc.):
#    - Set CLOUDFLARE_API_TOKEN as repository secret
#    - Set build-time variables in workflow file or CI settings
#    - Runtime secrets via Wrangler as shown above

# ==============================================================================
# SECURITY BEST PRACTICES
# ==============================================================================

# ✅ DO:
# - Add .env, .env.local, .env.production to .gitignore
# - Use different secrets for production vs development
# - Rotate secrets regularly
# - Use API tokens with minimal required permissions
# - Store production secrets in secure password manager

# ❌ DON'T:
# - Commit any .env files to version control
# - Use production secrets in development
# - Share secrets via email or chat
# - Hardcode secrets in source code
# - Use the same API keys across environments

# ==============================================================================
# BULK SECRET SETUP SCRIPT
# ==============================================================================

# To set multiple secrets at once, create set-secrets.sh:

# #!/bin/bash
# PROJECT_NAME="my-pages-project"
#
# echo "Setting Cloudflare Pages secrets..."
#
# echo "$DATABASE_URL" | wrangler pages secret put DATABASE_URL --project-name="$PROJECT_NAME"
# echo "$API_KEY" | wrangler pages secret put API_KEY --project-name="$PROJECT_NAME"
# echo "$STRIPE_SECRET_KEY" | wrangler pages secret put STRIPE_SECRET_KEY --project-name="$PROJECT_NAME"
#
# echo "✅ All secrets configured!"

# Make it executable: chmod +x set-secrets.sh
# Run it: ./set-secrets.sh
# Then DELETE the script: rm set-secrets.sh

# ==============================================================================
# VERIFYING SECRETS
# ==============================================================================

# List all secrets (values are hidden):
# wrangler pages secret list --project-name=my-pages-project

# Delete a secret:
# wrangler pages secret delete SECRET_NAME --project-name=my-pages-project

# ==============================================================================
